name: Check Proxies and Update Gist

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

env:
  # --- ИЗМЕНИТЕ ЗДЕСЬ ДЛЯ ОТЛАДКИ ---
  # Установите "true", чтобы видеть подробные логи для каждого прокси в выводе Actions
  DEBUG: "true" 
  
  # URL со списком прокси для проверки. Замените на свой!
  PROXY_LIST_URL: "https://raw.githubusercontent.com/barry-far/V2ray-Config/refs/heads/main/All_Configs_Sub.txt"
  # Имя файла, который будет создан в Gist
  GIST_FILENAME: "working_proxies.txt"

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip' # Ускоряем установку зависимостей

      - name: 3. Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 4. Download and setup Xray-core
        run: |
          # Скачиваем последнюю версию Xray для linux-64
          curl -L -o xray.zip https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip
          # Распаковываем ВЕСЬ архив в текущую директорию
          unzip xray.zip
          # Делаем исполняемым только сам xray
          chmod +x ./xray
          # (Опционально) Показываем, какие файлы появились
          ls -l
          echo "Xray-core, geoip.dat, and geosite.dat are ready."

      - name: 5. Download proxy list
        run: |
          curl -s -L -o proxies.txt ${{ env.PROXY_LIST_URL }}
          echo "Proxy list downloaded."

      - name: 6. Run the proxy checker script
        env:
          # Передаем секреты и флаг отладки в скрипт
          GIST_ID: ${{ secrets.GIST_ID }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_FILENAME: ${{ env.GIST_FILENAME }}
          DEBUG: ${{ env.DEBUG }}
        run: python proxy_checker.py proxies.txt
